
variables:
  pip: pip3 --timeout 100 --retries 10
# speed up git checkout phase
  GIT_DEPTH: 1


.apt-template: &apt-template
  - export LC_ALL=C.UTF-8
  - export DEBIAN_FRONTEND=noninteractive
  - echo Etc/UTC > /etc/timezone
  - echo 'quiet "1";'
       'APT::Get::Assume-Yes "true";'
       'APT::Install-Recommends "0";'
       'APT::Install-Suggests "0";'
       'Acquire::Retries "20";'
       'Dpkg::Use-Pty "0";'
      > /etc/apt/apt.conf.d/99gitlab
  - apt-get update
  - apt-get dist-upgrade


# `timeout` is used in case one of those runs fails, and waits forever
# for user input.
.test-template: &test-template
  - ./test_sdkmanager.py

  - export ANDROID_SDK_ROOT=/tmp/android-sdk
  - ./sdkmanager.py --list
  - ./sdkmanager.py 'build-tools;29.0.3' 'cmake;3.18.1'
  - echo y | ./sdkmanager.py --licenses    # accept the licenses
  - timeout 120 ./sdkmanager.py --licenses # now there should be unaccepted licenses

  - echo "deb http://deb.debian.org/debian stretch main" >> /etc/apt/sources.list
  - apt-get update
  - apt-get install openjdk-8-jdk-headless
  - ./sdkmanager.py tools
  # ensure that Android's sdkmanager understands fdroid's installs
  - $ANDROID_SDK_ROOT/tools/bin/sdkmanager 'build-tools;29.0.3' 'cmake;3.18.1'
  # ensure that Android's sdkmanager understands fdroid's licenses
  - timeout 120 $ANDROID_SDK_ROOT/tools/bin/sdkmanager --licenses


black:
  image: python:slim
  script:
    - pip install black
    - black --check --diff --color *.py


lint_format_safety_bandit_checks:
  image: alpine:3.16
  variables:
    LANG: C.UTF-8
  script:
    - apk add --no-cache bash build-base dash ca-certificates gcc git python3 python3-dev
    - python3 -m ensurepip
    - $pip install bandit nose pycodestyle pyflakes pylint safety
    - export EXITVALUE=0
    - function set_error() { export EXITVALUE=1; printf "\x1b[31mERROR `history|tail -2|head -1|cut -b 6-500`\x1b[0m\n"; }
    - ./hooks/pre-commit || set_error
    - bandit
        -ii
        -s B110,B311,B404,B408,B410,B603,B607
        -r $CI_PROJECT_DIR
        || set_error
    - safety check --full-report || set_error
    - pylint --rcfile=.pylint-rcfile --output-format=colorized --reports=n *.py || set_error
    - exit $EXITVALUE


test pip:
  image: debian:bullseye
  script:
    - *apt-template
    - apt-get install
          git
          python3-pip
          python3-setuptools
          python3-wheel
    - pip install -e .[test]
    - ./setup.py sdist

    - *test-template



test stretch:
  image: debian:stretch-backports
  script:
    - *apt-template
    - apt-get install
          git
          python3-argcomplete
          python3-defusedxml
          python3-requests
          python3-requests-cache
          python3-setuptools

    - *test-template



test bullseye:
  image: debian:bullseye-backports
  script:
    - *apt-template
    - apt-get install
          git
          python3-argcomplete
          python3-defusedxml
          python3-requests
          python3-requests-cache
          python3-setuptools

    - *test-template


build_app_offline:
  image: debian:stretch
  only:
    - branches
  variables:
    ANDROID_HOME: /opt/android-sdk
  script:
    - *apt-template
    - apt-get install
          default-jdk-headless
          git
          gradle
          gradle-debian-helper
          libgradle-android-plugin-java
          python3-argcomplete
          python3-pip
          python3-requests
          python3-setuptools
          python3-wheel
    - $pip install -e .
    - sdkmanager "build-tools;24.0.0" "platforms;android-23" "platforms;android-25"
    - mkdir -p $ANDROID_HOME/licenses/
    - echo '24333f8a63b6825ea9c5514f83c2829b004d1fee' > $ANDROID_HOME/licenses/android-sdk-license
    - mkdir ~/.android

    - git clone --depth 1 --branch 0.2.13 https://gitlab.com/fdroid/privileged-extension.git
    - cd privileged-extension
    - sed -i
          -e "s,jcenter(),maven { url 'file:///usr/share/maven-repo' },"
          -e '/com\.android\.support/d'
          build.gradle app/build.gradle
    - |
      tee --append gradle.properties <<EOF
        # ensure that gradle can't reach the internet via HTTP
        systemProp.http.proxyHost=localhost
        systemProp.http.proxyPort=12345
        systemProp.https.proxyHost=localhost
        systemProp.https.proxyPort=12345
      EOF

    - gradle --offline assembleDebug
